-- MySQL Script generated by MySQL Workbench
-- lun 29 abr 2019 18:07:04 CEST
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema socialite
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema socialite
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `socialite`;
CREATE SCHEMA IF NOT EXISTS `socialite` DEFAULT CHARACTER SET utf8 ;
USE `socialite` ;

-- -----------------------------------------------------
-- Table `socialite`.`User`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `socialite`.`User` ;


CREATE TABLE IF NOT EXISTS `socialite`.`User` (
  `idUser` INT NOT NULL AUTO_INCREMENT,
  `email` VARCHAR(45) NOT NULL,
  `password` VARCHAR(100) NOT NULL,
  `name` VARCHAR(45) NOT NULL,
  `surname` VARCHAR(45) NOT NULL,
  `nickname` VARCHAR(45) NOT NULL,
  `birthDate` DATE NOT NULL,
  `birthPlace` VARCHAR(45) NULL,
  `job` VARCHAR(100) NULL,
  `studyPlace` VARCHAR(45) NULL,
  `website` VARCHAR(200) NULL,
  `profilePic` VARCHAR(200) NULL,
  PRIMARY KEY (`idUser`),
  UNIQUE INDEX `idUsuario_UNIQUE` (`idUser` ASC),
  UNIQUE INDEX `correo_UNIQUE` (`email` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `socialite`.`Association`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `socialite`.`Association` ;

CREATE TABLE IF NOT EXISTS `socialite`.`Association` (
  `idAssociation` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  `description` VARCHAR(300) NULL,
  `profilePic` VARCHAR(100) NULL,
  `admin` INT NOT NULL,
  PRIMARY KEY (`idAssociation`),
  UNIQUE INDEX `idAssociation_UNIQUE` (`idAssociation` ASC),
  INDEX `Administrator_idx` (`admin` ASC),
  CONSTRAINT `Administrator`
    FOREIGN KEY (`admin`)
    REFERENCES `socialite`.`User` (`idUser`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `socialite`.`Visibility`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `socialite`.`Visibility` ;

CREATE TABLE IF NOT EXISTS `socialite`.`Visibility` (
  `idVisibility` INT NOT NULL,
  `name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`idVisibility`),
  UNIQUE INDEX `name_UNIQUE` (`name` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `socialite`.`Post`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `socialite`.`Post` ;

CREATE TABLE IF NOT EXISTS `socialite`.`Post` (
  `idPost` INT NOT NULL AUTO_INCREMENT,
  `user` INT NOT NULL,
  `association` INT,
  `visibility` INT NOT NULL,
  `date` DATETIME NOT NULL,
  `title` VARCHAR(45) NULL,
  `text` VARCHAR(500) NULL,
  `likes` INT NULL,
  PRIMARY KEY (`idPost`),
  UNIQUE INDEX `idPost_UNIQUE` (`idPost` ASC) VISIBLE,
  CONSTRAINT `fk_Post_Visibility`
    FOREIGN KEY (`visibility`)
    REFERENCES `socialite`.`Visibility` (`idVisibility`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Post_User`
    FOREIGN KEY (`user`)
    REFERENCES `socialite`.`User` (`idUser`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_Post_Association`
    FOREIGN KEY (`association`)
    REFERENCES `socialite`.`Association` (`idAssociation`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `socialite`.`Media`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `socialite`.`Media` ;

CREATE TABLE IF NOT EXISTS `socialite`.`Media` (
  `idMedia` INT NOT NULL AUTO_INCREMENT,
  `mediaUrl` VARCHAR(1000) NOT NULL,
  `post` INT NOT NULL,
  PRIMARY KEY (`idMedia`),
  UNIQUE INDEX `idMedia_UNIQUE` (`idMedia` ASC),
  CONSTRAINT `fk_Mefia_Post`
    FOREIGN KEY (`post`)
    REFERENCES `socialite`.`Post` (`idPost`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `socialite`.`FriendshipRequest`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `socialite`.`FriendshipRequest` ;

CREATE TABLE IF NOT EXISTS `socialite`.`FriendshipRequest` (
  `user_sender` INT NOT NULL,
  `user_receiver` INT NOT NULL,
  `dateTime` DATETIME NOT NULL,
  `text` VARCHAR(200) NULL,
  `friendshipRequestId` INT NOT NULL AUTO_INCREMENT,
  PRIMARY KEY (`friendshipRequestId`),
  INDEX `fk_UserReceiver_idx` (`user_receiver` ASC),
  CONSTRAINT `fk_UserReceiver`
    FOREIGN KEY (`user_receiver`)
    REFERENCES `socialite`.`User` (`idUser`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_UserSender`
    FOREIGN KEY (`user_sender`)
    REFERENCES `socialite`.`User` (`idUser`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;

-- -----------------------------------------------------
-- Table `socialite`.`AssociationRequest`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `socialite`.`AssociationRequest` ;

CREATE TABLE IF NOT EXISTS `socialite`.`AssociationRequest` (
  `user_sender` INT NOT NULL,
  `association_receiver` INT NOT NULL,
  `dateTime` DATETIME NOT NULL,
  `text` VARCHAR(200) NULL,
  `associationRequestId` INT NOT NULL AUTO_INCREMENT,
  PRIMARY KEY (`associationRequestId`),
  INDEX `fk_AssociationReceiver_idx` (`association_receiver` ASC),
  CONSTRAINT `fk_AssociationReceiver`
    FOREIGN KEY (`association_receiver`)
    REFERENCES `socialite`.`Association` (`idAssociation`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_UserSender_association`
    FOREIGN KEY (`user_sender`)
    REFERENCES `socialite`.`User` (`idUser`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;



-- -----------------------------------------------------
-- Table `socialite`.`UserAssociation`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `socialite`.`UserAssociation` ;

CREATE TABLE IF NOT EXISTS `socialite`.`UserAssociation` (
  `user` INT NOT NULL,
  `association` INT NOT NULL,
  PRIMARY KEY (`user`, `association`),
  INDEX `fk_UserAssociation_Association_idx` (`association` ASC),
  CONSTRAINT `fk_UserAssociation_User`
    FOREIGN KEY (`user`)
    REFERENCES `socialite`.`User` (`idUser`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_UserAssociation_Association`
    FOREIGN KEY (`association`)
    REFERENCES `socialite`.`Association` (`idAssociation`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `socialite`.`UserFriend`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `socialite`.`UserFriend` ;

CREATE TABLE IF NOT EXISTS `socialite`.`UserFriend` (
  `idUser` INT NOT NULL,
  `idFriend` INT NOT NULL,
  PRIMARY KEY (`idUser`, `idFriend`),
  INDEX `fk_UserFriend_Friend_idx` (`idFriend` ASC),
  CONSTRAINT `fk_UserFriend_User`
    FOREIGN KEY (`idUser`)
    REFERENCES `socialite`.`User` (`idUser`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_UserFriend_Friend`
    FOREIGN KEY (`idFriend`)
    REFERENCES `socialite`.`User` (`idUser`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;

USE `socialite` ;

-- -----------------------------------------------------
-- Placeholder table for view `socialite`.`view1`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `socialite`.`view1` (`id` INT);

-- -----------------------------------------------------
-- View `socialite`.`view1`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `socialite`.`view1`;
DROP VIEW IF EXISTS `socialite`.`view1` ;
USE `socialite`;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;

-- -----------------------------------------------------
-- Data for table `socialite`.`User`
-- -----------------------------------------------------
START TRANSACTION;
USE `socialite`;
INSERT INTO `socialite`.`User` (`idUser`, `email`, `password`, `name`, `surname`, `nickname`, `birthDate`, `birthPlace`, `job`, `studyPlace`, `website`, `profilePic`) VALUES (1, 'juan@gmail.es', '$2a$12$v2M1FoZY2oauOe2qoMPh1eEGUs6f1wslgjhWGSrFR8J6aGSqx8eOC', 'Juan', 'Martinez', 'juan97', '1997-05-22', 'Antequera', 'Mec√°nico', 'I.E.S. Pedro Espinosa', '', NULL);
INSERT INTO `socialite`.`User` (`idUser`, `email`, `password`, `name`, `surname`, `nickname`, `birthDate`, `birthPlace`, `job`, `studyPlace`, `website`, `profilePic`) VALUES (2, 'jose@gmail.com', '$2a$12$v2M1FoZY2oauOe2qoMPh1eEGUs6f1wslgjhWGSrFR8J6aGSqx8eOC', 'Jose', 'Jimenez', 'jose778', '1996-06-30', 'Estepona', 'Pintor', 'I.E.S. Vino', NULL, NULL);
INSERT INTO `socialite`.`User` (`idUser`, `email`, `password`, `name`, `surname`, `nickname`, `birthDate`, `birthPlace`, `job`, `studyPlace`, `website`, `profilePic`) VALUES (3, 'pepe@gmail.com', '$2a$12$v2M1FoZY2oauOe2qoMPh1eEGUs6f1wslgjhWGSrFR8J6aGSqx8eOC', 'Pepe', 'Ruiz', 'pepe777', '1990-02-22', 'Guadix', 'Electricista', '', NULL, NULL);
INSERT INTO `socialite`.`User` (`idUser`, `email`, `password`, `name`, `surname`, `nickname`, `birthDate`, `birthPlace`, `job`, `studyPlace`, `website`, `profilePic`) VALUES (4, 'andres@gmail.com', '$2a$12$v2M1FoZY2oauOe2qoMPh1eEGUs6f1wslgjhWGSrFR8J6aGSqx8eOC', 'Andres', 'Aguilar', 'andres11', '1990-02-22', 'Guadix', 'Juez', '', NULL, NULL);
INSERT INTO `socialite`.`User` (`idUser`, `email`, `password`, `name`, `surname`, `nickname`, `birthDate`, `birthPlace`, `job`, `studyPlace`, `website`, `profilePic`) VALUES (5, 'jorge@gmail.com', '$2a$12$v2M1FoZY2oauOe2qoMPh1eEGUs6f1wslgjhWGSrFR8J6aGSqx8eOC', 'Jorge', 'Paz', 'jorge22', '1990-02-22', 'Lanzarote', 'Barrendero', '', NULL, NULL);

COMMIT;


-- -----------------------------------------------------
-- Data for table `socialite`.`Visibility`
-- -----------------------------------------------------
START TRANSACTION;
USE `socialite`;
INSERT INTO `socialite`.`Visibility` (`idVisibility`, `name`) VALUES (1, 'PUBLIC');
INSERT INTO `socialite`.`Visibility` (`idVisibility`, `name`) VALUES (2, 'PRIVATE');

COMMIT;


-- -----------------------------------------------------
-- Data for table `socialite`.`Post`
-- -----------------------------------------------------
START TRANSACTION;
USE `socialite`;
INSERT INTO `socialite`.`Post` (`idPost`, `user`, `visibility`, `date`, `title`, `text`, `likes`) VALUES (1, 1, 1, '2019-02-22', 'Incendio en la catedral de Notre Dame', 'La catedral de Notre Dame de Par√≠s sufri√≥ un incendio que se inici√≥ en la tarde del 15 de abril de 2019 en el tejado del edificio y ocasion√≥ da√±os considerables. La aguja de la catedral y el tejado se derrumbaron y tanto el espacio interior como muchos bienes muebles se da√±aron gravemente. El incendio se produjo accidentalmente, por causas a√∫n no conocidas. En 24 horas, se recaudaron m√°s de 800 millones de euros para la reconstrucci√≥n.', NULL);
INSERT INTO `socialite`.`Post` (`idPost`, `user`, `visibility`, `date`, `title`, `text`, `likes`) VALUES (2, 2, 1, '2019-03-22', 'Mensaje bienvenida', 'Hola!!!! Soy nuevo aqu√≠, un saludo a todos!!', NULL);
INSERT INTO `socialite`.`Post` (`idPost`, `user`, `visibility`, `date`, `title`, `text`, `likes`) VALUES (3, 2, 1, '2019-03-23', 'Me aburro', 'Buenas... quiero conocer gente nueva, estoy muy aburrido en mi casa!! :(', NULL);

COMMIT;


-- -----------------------------------------------------
-- Data for table `socialite`.`UserFriend`
-- -----------------------------------------------------
START TRANSACTION;
USE `socialite`;
INSERT INTO `socialite`.`UserFriend` (`idUser`, `idFriend`) VALUES (1, 2);
INSERT INTO `socialite`.`UserFriend` (`idUser`, `idFriend`) VALUES (2, 1);

COMMIT;

-- -----------------------------------------------------
-- Data for table `socialite`.`FriendshipRequest`
-- -----------------------------------------------------
START TRANSACTION;
USE `socialite`;
INSERT INTO `socialite`.`FriendshipRequest` (`user_sender`, `user_receiver`,`dateTime`) VALUES (3, 2, CURTIME());

COMMIT;
